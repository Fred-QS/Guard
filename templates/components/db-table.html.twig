{% macro list(table) %}
    {% set columns = table.columns  %}
    {% if table is not empty %}
        <div>
            <div>
                <p class="font-bold text-lg mb-4">{{ 'database.title.database'|trans|capitalize }}: <span class="text-emerald-500" data-databases-target="dbName">{{ table.db }}</span> | {{ 'database.title.table'|trans|capitalize }}: <span data-databases-target="tableName" class="text-emerald-500">{{ table.name }}</span></p>
            </div>

            <div class="mb-4">
                <div class="flex justify-between items-center flex-wrap">
                    <p class="text-sm font-semibold mr-2 my-2">{{ 'database.title.total'|trans|capitalize }}: <span class="text-emerald-500">{{ table.total }}</span></p>
                    {% set columnsFilteredByType = columns|filter_by_text_type %}
                    {% if columnsFilteredByType is not empty %}
                        <div class="mb-2 flex flex-wrap items-center">
                            <label class="mr-2 mt-2">
                                <select name="search_by" class="block rounded-md border-0 bg-gray-800 py-1.5 text-emerald-500 shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-emerald-500 sm:text-sm sm:leading-6 cursor-pointer" data-databases-target="searchBy">
                                    {% for column in columnsFilteredByType %}
                                        <option{% if table.searchBy is same as column.name %} selected{% endif %} value="{{ column.name }}">{{ column.name }}</option>
                                    {% endfor %}
                                </select>
                            </label>
                            <label class="flex justify-end items-center mt-2">
                                <input data-databases-target="searchInput" type="search" spellcheck="false" autocomplete="off" class="block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-emerald-500 sm:text-sm sm:leading-6" value="{{ table.search }}">
                                <button type="button" data-databases-target="searchBtn" class="flex justify-center rounded-md bg-emerald-500 ml-2 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-emerald-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-emerald-500">{{ 'database.button.search'|trans|capitalize }}</button>
                            </label>
                        </div>
                    {% endif %}
                </div>
                {% if table.values is not empty %}
                    <div class="flex justify-between items-center flex-wrap">
                        <div class="flex justify-start items-center flex-wrap">
                            <label class="mt-2 mr-2">
                                <select data-databases-target="perPage" name="limit_sup" class="block rounded-md border-0 bg-gray-800 py-1.5 text-emerald-500 shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-emerald-500 sm:text-sm sm:leading-6 cursor-pointer">
                                    <option{% if table.limit is same as (10) %} selected{% endif %} value="10">{{ 'database.option.elements_per_page'|trans({'%nb%': 10}) }}</option>
                                    <option{% if table.limit is same as (25) %} selected{% endif %}  value="25">{{ 'database.option.elements_per_page'|trans({'%nb%': 25}) }}</option>
                                    <option{% if table.limit is same as (50) %} selected{% endif %}  value="50">{{ 'database.option.elements_per_page'|trans({'%nb%': 50}) }}</option>
                                    <option{% if table.limit is same as (100) %} selected{% endif %}  value="100">{{ 'database.option.elements_per_page'|trans({'%nb%': 100}) }}</option>
                                </select>
                            </label>
                            <div class="mt-2 flex justify-start items-center mr-2 block rounded-md border-0 bg-gray-800 py-1.5 text-emerald-500 shadow-sm ring-1 ring-inset ring-white/10 px-2">
                                <label class="flex justify-start items-center cursor-pointer mr-4">
                                    <input data-databases-target="order" type="radio"{% if table.order is same as 'ASC' %} checked{% endif %} value="ASC" name="order_sup" class="w-4 h-4 mr-1 text-gray-600 bg-gray-700 border-emerald-500 focus:ring-emerald-500 focus:ring-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 text-emerald-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941" />
                                    </svg>
                                </label>
                                <label class="flex justify-start items-center cursor-pointer">
                                    <input data-databases-target="order" type="radio"{% if table.order is same as 'DESC' %} checked{% endif %} value="DESC" name="order_sup" class="w-4 h-4 mr-1 text-gray-600 bg-gray-700 border-emerald-500 focus:ring-emerald-500 focus:ring-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 text-emerald-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6 9 12.75l4.286-4.286a11.948 11.948 0 0 1 4.306 6.43l.776 2.898m0 0 3.182-5.511m-3.182 5.51-5.511-3.181" />
                                    </svg>
                                </label>
                            </div>
                            <label class="mr-2 mt-2">
                                <select name="order_by_sup" class="block rounded-md border-0 bg-gray-800 py-1.5 text-emerald-500 shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-emerald-500 sm:text-sm sm:leading-6 cursor-pointer" data-databases-target="like">
                                    {% for column in columns %}
                                        <option{% if column.name is same as table.orderBy %} selected{% endif %} value="{{ column.name }}">{{ column.name }}</option>
                                    {% endfor %}
                                </select>
                            </label>
                        </div>
                        <div class="flex justify-end items-center flex-wrap">
                            <span class="text-sm mt-2">{{ 'database.label.elements_in_page'|trans({'%nb%': table.elements}) }}</span>
                            {% if table.pages|length > 1 %}
                                <div class="flex justify-end items-center mt-2 ml-4">
                                    {% if table.previous is null %}
                                        <span class="p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500 opacity-30">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5" />
                                            </svg>
                                        </span>
                                        <span class="ml-1 p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500 opacity-30">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                                            </svg>
                                        </span>
                                    {% else %}
                                        <span data-databases-target="paginator" class="cursor-pointer p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500" data-page="1">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5" />
                                            </svg>
                                        </span>
                                        <span data-databases-target="paginator" class="cursor-pointer ml-1 p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500" data-page="{{ table.previous }}">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                                            </svg>
                                        </span>
                                    {% endif %}
                                        <label class="flex justify-center items-center">
                                            <input data-databases-target="pageInput" value="{{ table.page }}" type="text" spellcheck="false" autocomplete="page" step="1" min="1" max="{{ table.pages }}" class="ml-2 block rounded-md border-0 bg-white/5 py-1.5 text-emerald-500 shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-emerald-500 text-sm leading-4 w-14">
                                            <p class="mx-2 text-sm text-emerald-500">{{ 'database.pagination.on'|trans }} {{ table.pages }}</p>
                                        </label>
                                    {% if table.next is null %}
                                        <span class="mr-1 p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500 opacity-30">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                                            </svg>
                                        </span>
                                        <span class="p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500 opacity-30">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m5.25 4.5 7.5 7.5-7.5 7.5m6-15 7.5 7.5-7.5 7.5" />
                                            </svg>
                                        </span>
                                    {% else %}
                                        <span data-databases-target="paginator" class="cursor-pointer mr-1 p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500" data-page="{{ table.next }}">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                                            </svg>
                                        </span>
                                        <span data-databases-target="paginator" class="cursor-pointer p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500" data-page="{{ table.pages }}">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m5.25 4.5 7.5 7.5-7.5 7.5m6-15 7.5 7.5-7.5 7.5" />
                                            </svg>
                                        </span>
                                    {% endif %}
                                </div>
                            {% endif %}
                        </div>
                    </div>
                {% endif %}
            </div>
            {% if table.values is not empty %}
                <div class="flow-root pb-2 px-4 rounded-2xl border border-gray-600">
                    <div class="overflow-x-auto w-full">
                        <div class="inline-block min-w-full align-middle">
                            <table class="min-w-full divide-y divide-gray-700">
                                <thead>
                                    <tr>
                                        {% for column in columns %}
                                            {% if loop.index is same as (1) %}
                                                <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-bold text-emerald-500 sm:pl-0">{{ column.name }}</th>
                                            {% elseif loop.index is same as columns|length %}
                                                <th scope="col" class="pl-3 py-3.5 pr-4 text-left text-sm font-bold text-emerald-500 sm:pr-0">{{ column.name }}</th>
                                            {% else %}
                                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-bold text-emerald-500">{{ column.name }}</th>
                                            {% endif %}
                                        {% endfor %}
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-800">
                                {% for row in table.values %}
                                    <tr>
                                        {% for value in row %}
                                            {% if loop.index is same as (1) %}
                                                <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-semibold text-gray-600 sm:pl-0">{{ value }}</td>
                                            {% elseif loop.index is same as row|length %}
                                                <td class="whitespace-nowrap py-4 pl-3 pr-4 text-sm text-gray-600 font-semibold sm:pr-0">{{ value }}</td>
                                            {% else %}
                                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-600 font-semibold">{{ value }}</td>
                                            {% endif %}
                                        {% endfor %}
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="mt-4">
                    <div class="flex justify-between items-center flex-wrap">
                        <div class="flex justify-start items-center flex-wrap">
                            <label class="mr-2 mb-2">
                                <select data-databases-target="perPage" name="limit_sub" class="block rounded-md border-0 bg-gray-800 py-1.5 text-emerald-500 shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-emerald-500 sm:text-sm sm:leading-6 cursor-pointer">
                                    <option{% if table.limit is same as (10) %} selected{% endif %} value="10">{{ 'database.option.elements_per_page'|trans({'%nb%': 10}) }}</option>
                                    <option{% if table.limit is same as (25) %} selected{% endif %}  value="25">{{ 'database.option.elements_per_page'|trans({'%nb%': 25}) }}</option>
                                    <option{% if table.limit is same as (50) %} selected{% endif %}  value="50">{{ 'database.option.elements_per_page'|trans({'%nb%': 50}) }}</option>
                                    <option{% if table.limit is same as (100) %} selected{% endif %}  value="100">{{ 'database.option.elements_per_page'|trans({'%nb%': 100}) }}</option>
                                </select>
                            </label>
                            <div class="flex justify-start items-center mr-2 block rounded-md border-0 bg-gray-800 py-1.5 text-emerald-500 shadow-sm ring-1 ring-inset ring-white/10 px-2 mb-2">
                                <label class="flex justify-start items-center cursor-pointer mr-4">
                                    <input data-databases-target="order" type="radio"{% if table.order is same as 'ASC' %} checked{% endif %} value="ASC" name="order_sub" class="w-4 h-4 mr-1 text-gray-600 bg-gray-700 border-emerald-500 focus:ring-emerald-500 focus:ring-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 text-emerald-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941" />
                                    </svg>
                                </label>
                                <label class="flex justify-start items-center cursor-pointer">
                                    <input data-databases-target="order" type="radio"{% if table.order is same as 'DESC' %} checked{% endif %} value="DESC" name="order_sub" class="w-4 h-4 mr-1 text-gray-600 bg-gray-700 border-emerald-500 focus:ring-emerald-500 focus:ring-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 text-emerald-500">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6 9 12.75l4.286-4.286a11.948 11.948 0 0 1 4.306 6.43l.776 2.898m0 0 3.182-5.511m-3.182 5.51-5.511-3.181" />
                                    </svg>
                                </label>
                            </div>
                            <label class="mr-2 mb-2">
                                <select name="order_by_sub" class="block rounded-md border-0 bg-gray-800 py-1.5 text-emerald-500 shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-emerald-500 sm:text-sm sm:leading-6 cursor-pointer" data-databases-target="like">
                                    {% for column in columns %}
                                        <option{% if column.name is same as table.orderBy %} selected{% endif %} value="{{ column.name }}">{{ column.name }}</option>
                                    {% endfor %}
                                </select>
                            </label>
                        </div>
                        <div class="flex justify-end items-center flex-wrap">
                            <span class="text-sm mb-2">{{ 'database.label.elements_in_page'|trans({'%nb%': table.elements}) }}</span>
                            {% if table.pages|length > 1 %}
                                <div class="flex justify-end items-center ml-4 mb-2">
                                    {% if table.previous is null %}
                                        <span class="p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500 opacity-30">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5" />
                                            </svg>
                                        </span>
                                        <span class="ml-1 p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500 opacity-30">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                                            </svg>
                                        </span>
                                    {% else %}
                                        <span data-databases-target="paginator" class="cursor-pointer p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500" data-page="1">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m18.75 4.5-7.5 7.5 7.5 7.5m-6-15L5.25 12l7.5 7.5" />
                                            </svg>
                                        </span>
                                        <span data-databases-target="paginator" class="cursor-pointer ml-1 p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500" data-page="{{ table.previous }}">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                                            </svg>
                                        </span>
                                    {% endif %}
                                    <p class="mx-2 text-sm text-emerald-500">{{ table.page }} {{ 'database.pagination.on'|trans }} {{ table.pages }}</p>
                                    {% if table.next is null %}
                                        <span class="mr-1 p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500 opacity-30">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                                            </svg>
                                        </span>
                                        <span class="p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500 opacity-30">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m5.25 4.5 7.5 7.5-7.5 7.5m6-15 7.5 7.5-7.5 7.5" />
                                            </svg>
                                        </span>
                                    {% else %}
                                        <span data-databases-target="paginator" class="cursor-pointer mr-1 p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500" data-page="{{ table.next }}">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                                            </svg>
                                        </span>
                                        <span data-databases-target="paginator" class="cursor-pointer p-1 rounded-md bg-gray-800 text-emerald-500 text-sm flex justify-center items-center border border-emerald-500" data-page="{{ table.pages }}">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="m5.25 4.5 7.5 7.5-7.5 7.5m6-15 7.5 7.5-7.5 7.5" />
                                            </svg>
                                        </span>
                                    {% endif %}
                                </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            {% else %}
                <div class="flex justify-center items-center">
                    <i class="p-4 italic text-sm text-center text-emerald-500 w-full font-bold">{{ 'database.table.no-result'|trans }}</i>
                </div>
            {% endif %}
        </div>
    {% else %}
        <div class="flex justify-center items-center">
            <i class="flex p-4 italic text-sm text-center text-emerald-500 w-full font-bold">{{ 'database.table.no-result'|trans }}</i>
        </div>
    {% endif %}
{% endmacro %}
